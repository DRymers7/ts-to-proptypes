name: Publish Package

on:
  push:
    branches: [ master ]
    paths-ignore:
      - 'package.json'  # Ignore runs triggered by our own version updates

permissions:
  contents: write
  packages: write

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Bump patch version
        run: npm version patch --no-git-tag-version

      - name: Build package
        run: npm run build

      - name: Setup Node for GitHub Packages
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          registry-url: 'https://npm.pkg.github.com'
          scope: '@DRymers7'

      - name: Debug version before publish
        run: node -p "require('./package.json').version"

      - name: Publish to GitHub Packages
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npm publish --registry https://npm.pkg.github.com --access public

      # Step 2: Publish to npm.org
      - name: Setup Node for npm
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          registry-url: 'https://registry.npmjs.org'

      - name: Restore original package name
        run: npm pkg set name=@drymers/ts-to-proptypes

      - name: Publish to npm.org
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: npm publish --access public

      # Commit version changes back to the repository
      - name: Commit and push version update
        run: |
          NEW_VERSION=${{ steps.version-bump.outputs.new_version }}
          git add package.json
          git commit -m "chore: bump version to $NEW_VERSION [skip ci]"
          git tag v$NEW_VERSION
          git push origin master
          git push origin v$NEW_VERSION