name: Publish Package

on:
  push:
    branches: [ master ]
    paths-ignore:
      - 'package.json'
      - 'package-lock.json'
      - 'readme.md'

permissions:
  contents: write
  packages: write
  pull-requests: write

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Configure git
        run: |
          git config user.name 'github-actions[bot]'
          git config user.email 'github-actions[bot]@users.noreply.github.com'

      - name: Build package
        run: npm run build

      # Publishing steps - done before version update
      # Step 1: Publish to GitHub Packages
      - name: Setup Node for GitHub Packages
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          registry-url: 'https://npm.pkg.github.com'
          scope: '@DRymers7'

      - name: Set GitHub Packages scope
        run: npm pkg set name=@DRymers7/ts-to-proptypes

      - name: Publish to GitHub Packages
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npm publish --registry https://npm.pkg.github.com --access public

      # Step 2: Publish to npm.org
      - name: Setup Node for npm
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          registry-url: 'https://registry.npmjs.org'

      - name: Restore original package name
        run: npm pkg set name=@drymers/ts-to-proptypes

      - name: Publish to npm.org
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: npm publish --access public

      # Create new branch with version bump
      - name: Create version update branch
        id: version-branch
        run: |
          # Get current version
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          echo "Current version: $CURRENT_VERSION"
          
          # Calculate new version (increment patch version)
          PARTS=(${CURRENT_VERSION//./ })
          MAJOR=${PARTS[0]}
          MINOR=${PARTS[1]}
          PATCH=$((${PARTS[2]} + 1))
          NEW_VERSION="$MAJOR.$MINOR.$PATCH"
          echo "New version: $NEW_VERSION"
          echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT
          
          # Create a new branch
          BRANCH_NAME="version-bump-$NEW_VERSION"
          git checkout -b $BRANCH_NAME
          
          # Update version in package.json
          npm version $NEW_VERSION --no-git-tag-version
          
          # Commit and push to the new branch
          git add package.json
          git commit -m "chore: bump version to $NEW_VERSION [skip ci]"
          git push origin $BRANCH_NAME
          
          echo "branch_name=$BRANCH_NAME" >> $GITHUB_OUTPUT

      # Create Pull Request for version update to update package.json
      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          title: "chore: bump version to ${{ steps.version-branch.outputs.new_version }}"
          body: |
            This PR automatically updates the package version after a successful publish.
            
            Version: ${{ steps.version-branch.outputs.new_version }}
          branch: ${{ steps.version-branch.outputs.branch_name }}
          base: master
