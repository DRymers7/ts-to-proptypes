name: Publish Package

on:
  push:
    branches: [ master ]

permissions:
  contents: write  # Needed for creating version tags
  packages: write

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history for tags

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Automatic version bump
        id: version-bump
        run: |
          # Get current version
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          echo "Current version: $CURRENT_VERSION"
          
          # Calculate new version (increment patch version)
          PARTS=(${CURRENT_VERSION//./ })
          MAJOR=${PARTS[0]}
          MINOR=${PARTS[1]}
          PATCH=$((${PARTS[2]} + 1))
          NEW_VERSION="$MAJOR.$MINOR.$PATCH"
          echo "New version: $NEW_VERSION"
          
          # Update package.json with new version
          npm version $NEW_VERSION --no-git-tag-version
          echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT
          
          # Configure git for tagging
          git config user.name 'GitHub Actions'
          git config user.email 'actions@github.com'

      - name: Build package
        run: npm run build

      # Step 1: Publish to GitHub Packages
      - name: Setup Node for GitHub Packages
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          registry-url: 'https://npm.pkg.github.com'
          scope: '@DRymers7'

      - name: Set GitHub Packages scope
        run: npm pkg set name=@DRymers7/ts-to-proptypes

      - name: Publish to GitHub Packages
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npm publish --registry https://npm.pkg.github.com --access public

      # Step 2: Publish to npm.org
      - name: Setup Node for npm
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          registry-url: 'https://registry.npmjs.org'

      - name: Restore original package name
        run: npm pkg set name=@drymers/ts-to-proptypes

      - name: Publish to npm.org
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: npm publish --access public

      # Create a tag for the new version
      - name: Push version tag
        run: |
          NEW_VERSION=${{ steps.version-bump.outputs.new_version }}
          git tag v$NEW_VERSION
          git push origin v$NEW_VERSION